-- Query that returns the average cost for all courses.
SELECT TO_CHAR(AVG(Cost), '9999.99') AS "Average Cost"
FROM Course;

-- Query that returns the total number of Students that registered during February 2007.
SELECT SUM(COUNT(*)) AS "February_Registations"
FROM Student
GROUP BY Registration_Date
HAVING TO_CHAR(Registration_Date, 'Mon YYYY') = 'Feb 2007';

-- Query that returns the average, highest and lowest final exam scores for Section 147.
SELECT TO_CHAR(AVG(Numeric_Grade), '99.99') AS Average, MAX(Numeric_Grade) AS Highest, MIN(Numeric_Grade) AS Lowest
FROM Grade
WHERE Section_ID = 147
AND grade_type_code = 'FI';

-- Lists the city, state and number of zipcodes for all cities with more than two zipcodes.
SELECT City, State, COUNT(*) AS ZIPCODES
FROM Zipcode
GROUP BY City, State
HAVING COUNT(*) > 2
ORDER BY State, City;

-- List of Sections and the number of students enrolled in each section for students who enrolled on 2/21/2007.
SELECT Section_ID, COUNT(*) AS Enrolled
FROM Enrollment
WHERE TO_CHAR(Enroll_Date, 'MM/DD/YYYY') = '02/21/2007'
GROUP BY Section_ID
ORDER BY Enrolled DESC;

-- Query listing the student ID, Section ID and Average Grade for all students in Section 86. 
SELECT Student_ID, Section_ID, TO_CHAR(AVG(Numeric_Grade), '99.9999') AS AverageGrade
FROM Grade
WHERE Section_ID = 86
GROUP BY Student_ID, Section_ID
ORDER BY Student_ID;

-- A query to determine the number of sections in which student ID 250 is enrolled. 
SELECT Student_ID, COUNT(*) AS Sections
FROM Enrollment
GROUP BY Student_ID
HAVING Student_ID = 250;

-- Lists the section ID and lowest quiz score for all sections that has a low score that is greater than a B.
SELECT Section_ID, MIN(Numeric_Grade) AS Lowscore
FROM Grade
WHERE Grade_Type_Code = 'QZ'
GROUP BY Section_ID
HAVING MIN(Numeric_Grade) > 80
ORDER BY Section_ID;

-- Lists the names of Employers having more than 5 student employees.
SELECT Employer, COUNT(*) AS Employees
FROM Student
GROUP BY Employer
HAVING COUNT(*) > 5
ORDER BY COUNT(*);

-- Lists the section ID, number of participation grades and lowest participation grade for all sections with more than 15 participation grades. 
SELECT Section_ID, COUNT(*) AS Participation_Grades, MIN(Numeric_Grade) AS Lowest_grade
FROM Grade
WHERE Grade_Type_Code = 'PA'
GROUP BY Section_ID
HAVING COUNT(*) > 15
ORDER BY Section_ID;